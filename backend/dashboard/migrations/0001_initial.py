# Generated by Django 4.2.15 on 2025-09-22 17:17

from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ActivityType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("anonymizer", "Anonymizer"),
                            ("report_correction", "Report Correction"),
                            ("patient_management", "Patient Management"),
                            ("appointment", "Appointment"),
                            ("medical_record", "Medical Record"),
                            ("authentication", "Authentication"),
                            ("system", "System"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Icon class for UI", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="primary", help_text="Color theme for UI", max_length=20
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Flexible configuration for activity type",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "dashboard_activity_type",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="DashboardMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("display_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("category", models.CharField(max_length=50)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("counter", "Counter"),
                            ("gauge", "Gauge"),
                            ("histogram", "Histogram"),
                            ("rate", "Rate"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "aggregation",
                    models.CharField(
                        choices=[
                            ("sum", "Sum"),
                            ("avg", "Average"),
                            ("min", "Minimum"),
                            ("max", "Maximum"),
                            ("count", "Count"),
                        ],
                        max_length=20,
                    ),
                ),
                ("value", models.FloatField(default=0)),
                ("previous_value", models.FloatField(default=0)),
                (
                    "config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Metric configuration (thresholds, formatting, etc.)",
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_calculated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "dashboard_metric",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("login_time", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("logout_time", models.DateTimeField(blank=True, null=True)),
                ("page_views", models.IntegerField(default=0)),
                ("actions_performed", models.IntegerField(default=0)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "dashboard_user_session",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("success", "Success"),
                        ],
                        default="info",
                        max_length=20,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Flexible metadata for activity context",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "duration",
                    models.FloatField(
                        blank=True, help_text="Duration in seconds", null=True
                    ),
                ),
                (
                    "activity_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="dashboard.activitytype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "dashboard_activity_log",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["activity_type", "-timestamp"],
                        name="dashboard_a_activit_d9a308_idx",
                    ),
                    models.Index(
                        fields=["user", "-timestamp"],
                        name="dashboard_a_user_id_f69982_idx",
                    ),
                    models.Index(
                        fields=["-timestamp"], name="dashboard_a_timesta_a4efcd_idx"
                    ),
                ],
            },
        ),
    ]
