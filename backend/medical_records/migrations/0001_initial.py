<<<<<<< HEAD
# Generated by Django 4.2.15 on 2025-09-22 07:56

=======
# Generated by Django 4.2.15 on 2025-09-24 07:17

from django.conf import settings
>>>>>>> 92e185261852f01afd85bbbd7946e0335429e14d
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
<<<<<<< HEAD
    initial = True

    dependencies = [
        ("patients", "0001_initial"),
        ("doctors", "0001_initial"),
        ("appointments", "0001_initial"),
=======

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
>>>>>>> 92e185261852f01afd85bbbd7946e0335429e14d
    ]

    operations = [
        migrations.CreateModel(
<<<<<<< HEAD
            name="MedicalRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_id",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                (
                    "record_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation Notes"),
                            ("diagnosis", "Diagnosis"),
                            ("prescription", "Prescription"),
                            ("lab_result", "Lab Result"),
                            ("imaging", "Imaging Report"),
                            ("surgery", "Surgery Report"),
                            ("discharge", "Discharge Summary"),
                        ],
                        max_length=20,
                    ),
                ),
                ("record_date", models.DateTimeField(auto_now_add=True)),
                ("chief_complaint", models.TextField(blank=True)),
                ("history_of_present_illness", models.TextField(blank=True)),
                ("physical_examination", models.TextField(blank=True)),
                ("assessment", models.TextField(blank=True)),
                ("plan", models.TextField(blank=True)),
                ("blood_pressure", models.CharField(blank=True, max_length=20)),
                ("heart_rate", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=4, null=True
                    ),
                ),
                (
                    "respiratory_rate",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "oxygen_saturation",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("diagnosis", models.TextField(blank=True)),
                ("treatment", models.TextField(blank=True)),
                ("follow_up_instructions", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("is_confidential", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="appointments.appointment",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctors.doctor"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_records",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "medical_records",
                "ordering": ["-record_date"],
            },
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prescription_id",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("prescribed_date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctors.doctor"
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="medical_records.medicalrecord",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "prescriptions",
                "ordering": ["-prescribed_date"],
            },
        ),
        migrations.CreateModel(
            name="PrescriptionItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("medication_name", models.CharField(max_length=200)),
                ("dosage", models.CharField(max_length=100)),
                ("frequency", models.CharField(max_length=100)),
                ("duration", models.CharField(max_length=100)),
                ("quantity", models.PositiveIntegerField()),
                ("instructions", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="medical_records.prescription",
                    ),
                ),
            ],
            options={
                "db_table": "prescription_items",
            },
        ),
        migrations.CreateModel(
            name="LabResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "result_id",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("test_name", models.CharField(max_length=200)),
                ("test_type", models.CharField(max_length=100)),
                ("ordered_date", models.DateTimeField(auto_now_add=True)),
                ("sample_collected_date", models.DateTimeField(blank=True, null=True)),
                ("result_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("results", models.TextField(blank=True)),
                ("reference_range", models.CharField(blank=True, max_length=200)),
                ("is_abnormal", models.BooleanField(default=False)),
                ("technician_notes", models.TextField(blank=True)),
                (
                    "report_file",
                    models.FileField(blank=True, null=True, upload_to="lab_reports/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="medical_records.medicalrecord",
                    ),
                ),
                (
                    "ordered_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctors.doctor"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_results",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "lab_results",
                "ordering": ["-ordered_date"],
=======
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=255)),
                ('record_id', models.CharField(max_length=100, unique=True)),
                ('record_type', models.CharField(default='general', max_length=50)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportCorrectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(max_length=100, unique=True)),
                ('medical_record_id_fallback', models.CharField(blank=True, max_length=100, null=True)),
                ('original_text', models.TextField()),
                ('corrected_text', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medical_records.medicalrecord')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnonymizationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(max_length=100, unique=True)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('anonymization_level', models.CharField(default='standard', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnonymizationConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('config_settings', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnonymizationAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='medical_records.anonymizationrequest')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ReportCorrectionVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField(default=1)),
                ('corrected_text', models.TextField()),
                ('correction_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('correction_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='medical_records.reportcorrectionrequest')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('correction_request', 'version_number')},
>>>>>>> 92e185261852f01afd85bbbd7946e0335429e14d
            },
        ),
    ]
